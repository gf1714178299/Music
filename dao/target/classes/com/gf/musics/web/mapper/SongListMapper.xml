<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gf.musics.web.dao.SongListMapper">
  <resultMap id="BaseResultMap" type="com.gf.musics.web.model.SongList">
    <id column="pk_id" jdbcType="INTEGER" property="pkId" />
    <result column="emotion_id" jdbcType="INTEGER" property="emotionId" />
    <result column="song_list_img" jdbcType="VARCHAR" property="songListImg" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    pk_id, emotion_id, song_list_img, description, delete_flag, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_song_list
    where pk_id = #{pkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_song_list
    where pk_id = #{pkId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gf.musics.web.model.SongList">
    insert into t_song_list (pk_id, emotion_id, song_list_img, 
      description, delete_flag, create_time, 
      update_time)
    values (#{pkId,jdbcType=INTEGER}, #{emotionId,jdbcType=INTEGER}, #{songListImg,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gf.musics.web.model.SongList">
    insert into t_song_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="emotionId != null">
        emotion_id,
      </if>
      <if test="songListImg != null">
        song_list_img,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=INTEGER},
      </if>
      <if test="emotionId != null">
        #{emotionId,jdbcType=INTEGER},
      </if>
      <if test="songListImg != null">
        #{songListImg,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gf.musics.web.model.SongList">
    update t_song_list
    <set>
      <if test="emotionId != null">
        emotion_id = #{emotionId,jdbcType=INTEGER},
      </if>
      <if test="songListImg != null">
        song_list_img = #{songListImg,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gf.musics.web.model.SongList">
    update t_song_list
    set emotion_id = #{emotionId,jdbcType=INTEGER},
      song_list_img = #{songListImg,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select
    <include refid="Base_Column_List" />
    from t_song_list
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      delete_flag = 0
      <if test="emotion != null and emotion != ''">
        AND  emotion_id IN
        <foreach item="emotion" collection="emotion" open="(" separator="," close=")">
          #{emotion}
        </foreach>
      </if>
    </trim>
    order by update_time DESC
    limit 6
  </select>
  <select id="selectByCount" resultType="java.lang.Integer" parameterType="java.util.HashMap">
    select COUNT(1)
    from t_song_list
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      delete_flag = 0
      <if test="emotion != null and emotion != ''">
        AND  emotion_id IN
        <foreach item="emotion" collection="emotion" open="(" separator="," close=")">
        #{emotion}
      </foreach>
      </if>
    </trim>
    order by update_time DESC
    limit 6
  </select>
  <select id="selectByUpdateTime" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from t_song_list
    WHERE delete_flag = 0 AND emotion_id NOT IN
    <foreach item="emotion" collection="emotion" open="(" separator="," close=")">
      #{emotion}
    </foreach>
    ORDER BY update_time DESC
    limit #{i}
  </select>
</mapper>